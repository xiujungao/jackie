apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world
  namespace: jackie
  labels:
    app: hello-world
    deployment: hello-world
  annotations:
    deployment.kubernetes.io/revision: "2"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"hello-world:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"hello-world\")].image"}]'
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: hello-world
  template:
    metadata:
      labels:
        app: hello-world
        deployment: hello-world
    spec:
      serviceAccountName: hello-world-sa
      restartPolicy: Always
      containers:
        - name: hello-world
          image: image-registry.openshift-image-registry.svc:5000/jackie/hello-world:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
          env:
            - name: JAVA_OPTS
              value: "-Xms256m -Xmx512m"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: STORAGE_PATH
              value: "/data" # path inside the container
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: password
            #            - name: GREETING
            #              valueFrom:
            #                configMapKeyRef:
            #                  name: hello-world-config
            #                  key: greeting
            - name: SPRING_CONFIG_IMPORT # Spring Boot 2.4+ config import, has to be the exact name
              value: "optional:file:/etc/config/app.properties" # path inside the container
          volumeMounts:
            - name: app-data
              mountPath: /data # mount the volume at /data inside the container
            - name: db-secret-volume
              mountPath: /etc/creds # mount the secret at /etc/creds
              readOnly: true # mount the secret as read-only
            #            - name: config-volume
            #              mountPath: /etc/config # mount the config map at /etc/config
            #              readOnly: true # mount the config map as read-only
            - name: config-volume
              mountPath: /etc/config/app.properties
              subPath: app.properties
              readOnly: true # mount the config map as read-only
      volumes:
        - name: app-data
          persistentVolumeClaim:
            claimName: hello-world-pvc # reference to the PVC
        - name: db-secret-volume
          secret:
            secretName: db-secret
        - name: config-volume
          configMap:
            name: hello-world-config
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: hello-world
              topologyKey: kubernetes.io/hostname
      schedulerName: default-scheduler
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: hello-world
